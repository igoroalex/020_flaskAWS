# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application
env:
  EB_PACKAGE_S3_BUCKET_NAME: "020-flask-app-packages"
  EB_APPLICATION_NAME: "020_flask"
  EB_ENVIRONMENT_NAME: "020flask-env"
  VERSION_SHA: ${{ github.sha }}
  DEPLOY_PACKAGE_NAME: "020_flask_app_${{ github.sha }}.zip"
  AWS_REGION_NAME: "eu-central-1"
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  tests:

    runs-on: ubuntu-latest

    steps:
      - name: Git clone repo
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
      run: |
         pytest

  build_CI:
    needs: [ tests ]

    runs-on: ubuntu-latest

    steps:
      - name: Git clone repo
        uses: actions/checkout@v3

      - name: Create ZIP deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ env.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Copy Deployment package to S3 bucket
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }}  s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/

      - name: CI Happy massege
        run: echo "CI Pipeline part finished"

  deploy_CD:

    needs: [ build_CI ]
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ env.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}
      - name: Create ElasticBeanstalk App version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "ver-${{ env.VERSION_SHA }}" \
          --description "CommitSHA ${{ env.VERSION_SHA }}"
      - name: Deploy ElasticBeanstalk App version
        run: |
          aws elasticbeanstalk update-environment \
          --environment-name ${{ env.EB_ENVIRONMENT_NAME }} \
          --version-label "ver-${{ env.VERSION_SHA }}"

      - name: CD Happy massege
        run: echo "CD Pipeline part finished"

